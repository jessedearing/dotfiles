#!/usr/bin/env ruby

require 'rubygems'
require 'rubydns'

if RUBY_VERSION >= '1.9.3'
  class Resolv
    class DNS
      # Queries the given DNS server and returns its response in its entirety.
      # This allows such responses to be passed upstream with little or no
      # modification/reinterpretation.
      def query(name, typeclass)
        lazy_initialize
        requester = make_udp_requester
        senders = {}
        begin
          @config.resolv(name) {|candidate, tout, nameserver|
            msg = Message.new
            msg.rd = 1
            msg.add_question(candidate, typeclass)
            unless sender = senders[[candidate, nameserver]]
              sender = senders[[candidate, nameserver]] =
              requester.sender(msg, candidate, nameserver)
            end
            reply, reply_name = requester.request(sender, tout)

            return reply, reply_name
          }
        ensure
          requester.close
        end
      end
    end
  end
end

$R = Resolv::DNS.new(:nameserver => ['8.8.8.8', '8.8.4.4'])

RubyDNS.run_server do
  match(/\.local$/, :A) do |match_data, transaction|
    transaction.respond!("127.0.0.1")
  end

  otherwise do |transaction|
    transaction.passthrough!($R)
  end
end
